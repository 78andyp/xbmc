/*
 *  Copyright (C) 2025 Team Kodi
 *  This file is part of Kodi - https://kodi.tv
 *
 *  SPDX-License-Identifier: GPL-2.0-or-later
 *  See LICENSES/README.md for more information.
 */

#pragma once

#include <algorithm>
#include <array>
#include <string_view>

struct ISO3166_1
{
  std::string_view alpha2;
  std::string_view alpha3;
};

// Based on ISO 3166 - sorted by alpha2
// clang-format off
inline constexpr std::array<ISO3166_1, 245> TableISO3166_1 = {{
    {"ad", "and"},
    {"ae", "are"},
    {"af", "afg"},
    {"ag", "atg"},
    {"ai", "aia"},
    {"al", "alb"},
    {"am", "arm"},
    {"an", "ant"},
    {"ao", "ago"},
    {"aq", "ata"},
    {"ar", "arg"},
    {"as", "asm"},
    {"at", "aut"},
    {"au", "aus"},
    {"aw", "abw"},
    {"ax", "ala"},
    {"az", "aze"},
    {"ba", "bih"},
    {"bb", "brb"},
    {"bd", "bgd"},
    {"be", "bel"},
    {"bf", "bfa"},
    {"bg", "bgr"},
    {"bh", "bhr"},
    {"bi", "bdi"},
    {"bj", "ben"},
    {"bl", "blm"},
    {"bm", "bmu"},
    {"bn", "brn"},
    {"bo", "bol"},
    {"br", "bra"},
    {"bs", "bhs"},
    {"bt", "btn"},
    {"bv", "bvt"},
    {"bw", "bwa"},
    {"by", "blr"},
    {"bz", "blz"},
    {"ca", "can"},
    {"cd", "cod"},
    {"cf", "caf"},
    {"cg", "cog"},
    {"ch", "che"},
    {"ci", "civ"},
    {"ck", "cok"},
    {"cl", "chl"},
    {"cm", "cmr"},
    {"cn", "chn"},
    {"co", "col"},
    {"cr", "cri"},
    {"cu", "cub"},
    {"cv", "cpv"},
    {"cx", "cxr"},
    {"cy", "cyp"},
    {"cz", "cze"},
    {"de", "deu"},
    {"dj", "dji"},
    {"dk", "dnk"},
    {"dm", "dma"},
    {"do", "dom"},
    {"dz", "dza"},
    {"ec", "ecu"},
    {"ee", "est"},
    {"eg", "egy"},
    {"eh", "esh"},
    {"er", "eri"},
    {"es", "esp"},
    {"et", "eth"},
    {"fi", "fin"},
    {"fj", "fji"},
    {"fk", "flk"},
    {"fm", "fsm"},
    {"fo", "fro"},
    {"fr", "fra"},
    {"ga", "gab"},
    {"gb", "gbr"},
    {"gd", "grd"},
    {"ge", "geo"},
    {"gf", "guf"},
    {"gg", "ggy"},
    {"gh", "gha"},
    {"gi", "gib"},
    {"gl", "grl"},
    {"gm", "gmb"},
    {"gn", "gin"},
    {"gp", "glp"},
    {"gq", "gnq"},
    {"gr", "grc"},
    {"gs", "sgs"},
    {"gt", "gtm"},
    {"gu", "gum"},
    {"gw", "gnb"},
    {"gy", "guy"},
    {"hk", "hkg"},
    {"hm", "hmd"},
    {"hn", "hnd"},
    {"hr", "hrv"},
    {"ht", "hti"},
    {"hu", "hun"},
    {"id", "idn"},
    {"ie", "irl"},
    {"il", "isr"},
    {"im", "imn"},
    {"in", "ind"},
    {"io", "iot"},
    {"iq", "irq"},
    {"ir", "irn"},
    {"is", "isl"},
    {"it", "ita"},
    {"je", "jey"},
    {"jm", "jam"},
    {"jo", "jor"},
    {"jp", "jpn"},
    {"ke", "ken"},
    {"kg", "kgz"},
    {"kh", "khm"},
    {"ki", "kir"},
    {"km", "com"},
    {"kn", "kna"},
    {"kp", "prk"},
    {"kr", "kor"},
    {"kw", "kwt"},
    {"ky", "cym"},
    {"kz", "kaz"},
    {"la", "lao"},
    {"lb", "lbn"},
    {"lc", "lca"},
    {"li", "lie"},
    {"lk", "lka"},
    {"lr", "lbr"},
    {"ls", "lso"},
    {"lt", "ltu"},
    {"lu", "lux"},
    {"lv", "lva"},
    {"ly", "lby"},
    {"ma", "mar"},
    {"mc", "mco"},
    {"md", "mda"},
    {"me", "mne"},
    {"mf", "maf"},
    {"mg", "mdg"},
    {"mh", "mhl"},
    {"mk", "mkd"},
    {"ml", "mli"},
    {"mm", "mmr"},
    {"mn", "mng"},
    {"mo", "mac"},
    {"mp", "mnp"},
    {"mq", "mtq"},
    {"mr", "mrt"},
    {"ms", "msr"},
    {"mt", "mlt"},
    {"mu", "mus"},
    {"mv", "mdv"},
    {"mw", "mwi"},
    {"mx", "mex"},
    {"my", "mys"},
    {"mz", "moz"},
    {"na", "nam"},
    {"nc", "ncl"},
    {"ne", "ner"},
    {"nf", "nfk"},
    {"ng", "nga"},
    {"ni", "nic"},
    {"nl", "nld"},
    {"no", "nor"},
    {"np", "npl"},
    {"nr", "nru"},
    {"nu", "niu"},
    {"nz", "nzl"},
    {"om", "omn"},
    {"pa", "pan"},
    {"pe", "per"},
    {"pf", "pyf"},
    {"pg", "png"},
    {"ph", "phl"},
    {"pk", "pak"},
    {"pl", "pol"},
    {"pm", "spm"},
    {"pn", "pcn"},
    {"pr", "pri"},
    {"ps", "pse"},
    {"pt", "prt"},
    {"pw", "plw"},
    {"py", "pry"},
    {"qa", "qat"},
    {"re", "reu"},
    {"ro", "rou"},
    {"rs", "srb"},
    {"ru", "rus"},
    {"rw", "rwa"},
    {"sa", "sau"},
    {"sb", "slb"},
    {"sc", "syc"},
    {"sd", "sdn"},
    {"se", "swe"},
    {"sg", "sgp"},
    {"sh", "shn"},
    {"si", "svn"},
    {"sj", "sjm"},
    {"sk", "svk"},
    {"sl", "sle"},
    {"sm", "smr"},
    {"sn", "sen"},
    {"so", "som"},
    {"sr", "sur"},
    {"st", "stp"},
    {"sv", "slv"},
    {"sy", "syr"},
    {"sz", "swz"},
    {"tc", "tca"},
    {"td", "tcd"},
    {"tf", "atf"},
    {"tg", "tgo"},
    {"th", "tha"},
    {"tj", "tjk"},
    {"tk", "tkl"},
    {"tl", "tls"},
    {"tm", "tkm"},
    {"tn", "tun"},
    {"to", "ton"},
    {"tr", "tur"},
    {"tt", "tto"},
    {"tv", "tuv"},
    {"tw", "twn"},
    {"tz", "tza"},
    {"ua", "ukr"},
    {"ug", "uga"},
    {"um", "umi"},
    {"us", "usa"},
    {"uy", "ury"},
    {"uz", "uzb"},
    {"va", "vat"},
    {"vc", "vct"},
    {"ve", "ven"},
    {"vg", "vgb"},
    {"vi", "vir"},
    {"vn", "vnm"},
    {"vu", "vut"},
    {"wf", "wlf"},
    {"ws", "wsm"},
    {"ye", "yem"},
    {"yt", "myt"},
    {"za", "zaf"},
    {"zm", "zmb"},
    {"zw", "zwe"}
}};
// clang-format on

static_assert(std::ranges::is_sorted(TableISO3166_1, {}, &ISO3166_1::alpha2));

constexpr auto CreateTableISO3166_1ByAlpha3()
{
  auto codes{TableISO3166_1};
  std::ranges::sort(codes, {}, &ISO3166_1::alpha3);
  return codes;
}

inline constexpr auto TableISO3166_1ByAlpha3 = CreateTableISO3166_1ByAlpha3();
